{"version":3,"file":"TTabBox.stories-ec66aa76.js","sources":["../../src/components/data-container/tab-box/TTabBoxContext.ts","../../src/components/data-container/tab-box/TTabBox.tsx","../../src/components/data-container/tab-box/TTabItem.tsx"],"sourcesContent":["import {createContext, CSSProperties, MouseEvent} from 'react';\nimport {TTabBoxValue} from './TTabBox.interface';\n\ntype tabBoxContext = {\n    activeTab: TTabBoxValue,\n    onChangeActiveTab: (activeTab: TTabBoxValue) => void,\n}\n\nexport const tabBoxContext = createContext<tabBoxContext>(\n    {\n        activeTab: 0,\n        onChangeActiveTab: null,\n    },\n);\n\nexport default tabBoxContext;\n","import {cloneElement, CSSProperties, useCallback, useMemo} from 'react';\nimport {TTabBoxProps, TTabBoxValue} from './TTabBox.interface';\nimport TTabBoxContext from './TTabBoxContext';\n\nconst TTabBox = (props: TTabBoxProps) => {\n    \n    // region [Hooks]\n    \n    const {onChange, value, children, style, className} = props;\n    \n    // endregion\n    \n    \n    // region [Templates]\n    \n    const rootClass = useMemo((): string => {\n        const clazz: string[] = [];\n        \n        if (className) { clazz.push(className); }\n        \n        return clazz.join(' ');\n    }, [className]);\n    \n    const rootStyle = useMemo((): CSSProperties => {\n        if (style) { return style; }\n        return {};\n    }, [style]);\n    \n    const tabItemContent = useMemo(() => children\n        .filter(\n            (child, index) => {\n                if (child.props.value) {\n                    return child.props.value === value;\n                }\n                return index === value;\n            },\n        )[0]?.props.content, [children, value]);\n    \n    // endregion1\n    \n    \n    // region [Events]\n    \n    const onChangeActiveTab = useCallback((val: TTabBoxValue) => onChange(val), [onChange]);\n    \n    // endregion\n    \n    return (\n        <div className={`t-tab-box ${rootClass}`} style={rootStyle}>\n            <ul className={'t-tab-box__tab-list'}>\n                <TTabBoxContext.Provider value={{activeTab: value, onChangeActiveTab}}>\n                    {\n                        children.map(\n                            (child, index) => (\n                                cloneElement(child, {\n                                    index,\n                                    key: child.props.value || index,\n                                })\n                            ),\n                        )\n                    }\n                </TTabBoxContext.Provider>\n            </ul>\n            <div className={'t-tab-box__tab-content t-tab-item-content'}>\n                {tabItemContent}\n            </div>\n        </div>\n    );\n};\n\nTTabBox.defaultProps = {};\n\nTTabBox.displayName = 'TTabBox';\n\n\nexport default TTabBox;\n","import {MouseEvent, useCallback, useContext, useMemo, useRef} from 'react';\nimport {TTabItemProps} from './TTabBox.interface';\nimport TTabBoxContext from './TTabBoxContext';\nimport useRipple from '@/common/hook/UseRipple';\n\nconst TTabItem = (props: TTabItemProps) => {\n    \n    // region [Hooks]\n    \n    const {value, index, label} = props;\n    const context = useContext<typeof TTabBoxContext>(TTabBoxContext);\n    const itemRef = useRef<HTMLLIElement>(null);\n    const ripple = useRipple(itemRef);\n    // endregion\n    \n    \n    // region [Events]\n    \n    const onMouseDown = useCallback((event: MouseEvent): void => {\n        ripple.register(event);\n    }, [ripple]);\n    \n    \n    const onMouseUp = useCallback((): void => {\n        ripple.remove();\n        context.onChangeActiveTab(value || index);\n    }, [context, index, value, ripple]);\n    \n    const onMouseLeave = useCallback((): void => {\n        ripple.remove();\n    }, [ripple]);\n    \n    // endregion\n    \n    // region [Templates]\n    \n    const rootClass = useMemo((): string => {\n        const clazz: string[] = [];\n        \n        if (context.activeTab === value) {\n            clazz.push('t-tab-item-label--active');\n        } else if (!value && context.activeTab === index) {\n            clazz.push('t-tab-item-label--active');\n        }\n        \n        return clazz.join(' ');\n    }, [context.activeTab, index, value]);\n    \n    // endregion\n    \n    \n    return (\n        <li ref={itemRef}\n            className={`t-tab-item-label ${rootClass}`}\n            onMouseDown={onMouseDown}\n            onMouseUp={onMouseUp}\n            onMouseLeave={onMouseLeave}>\n            {label}\n            <div className={'t-tab-item-label__active-indicator'} />\n        </li>\n    );\n};\n\n\nexport default TTabItem;\n"],"names":["tabBoxContext","createContext","TTabBox","props","onChange","value","children","style","className","rootClass","useMemo","clazz","rootStyle","tabItemContent","_a","child","index","onChangeActiveTab","useCallback","val","jsxs","jsx","TTabBoxContext","cloneElement","TTabItem","label","context","useContext","itemRef","useRef","ripple","useRipple","onMouseDown","event","onMouseUp","onMouseLeave"],"mappings":"yNAQO,MAAMA,EAAgBC,EAAA,cACzB,CACI,UAAW,EACX,kBAAmB,IACvB,CACJ,ECTAC,EAAAC,GAAA,CAII,KAAA,CAAA,SAAAC,EAAA,MAAAC,EAAA,SAAAC,EAAA,MAAAC,EAAA,UAAAC,CAAA,EAAAL,EAOAM,EAAAC,EAAAA,QAAA,IAAA,CACI,MAAAC,EAAA,CAAA,EAEA,OAAAH,GAAiBG,EAAA,KAAAH,CAAA,EAEjBG,EAAA,KAAA,GAAA,CAAqB,EAAA,CAAAH,CAAA,CAAA,EAGzBI,EAAAF,EAAAA,QAAA,IACIH,GACA,GAAQ,CAAAA,CAAA,CAAA,EAGZM,EAAAH,EAAAA,QAAA,IAAA,OAAA,OAAAI,EAAAR,EAAA,OACK,CAAAS,EAAAC,IAEOD,EAAA,MAAA,MACIA,EAAA,MAAA,QAAAV,EAEJW,IAAAX,CACJ,EAAA,CAAA,IAPR,YAAAS,EAOQ,MAAA,SAAA,CAAAR,EAAAD,CAAA,CAAA,EAQRY,EAAAC,EAAA,YAAAC,GAAAf,EAAAe,CAAA,EAAA,CAAAf,CAAA,CAAA,EAIA,OAAAgB,OAAA,MAAA,CAAA,UAAA,aAAAX,CAAA,GAAA,MAAAG,EAAA,SAAA,CAEQS,EAAA,IAAA,KAAA,CAAA,UAAA,sBAAA,SAAAA,EAAA,IAAAC,EAAA,SAAA,CAAA,MAAA,CAAA,UAAAjB,EAAA,kBAAAY,CAAA,EAAA,SAAAX,EAAA,IAGqB,CAAAS,EAAAC,IAAAO,EAAA,aAAAR,EAAA,CAEmB,MAAAC,EAChB,IAAAD,EAAA,MAAA,OAAAC,CAC0B,CAAA,CAC7B,CAAA,CAAA,CAAA,CAAA,EAKrBK,EAAA,IAAA,MAAA,CAAA,UAAA,4CAAA,SAAAR,EAAA,CAGA,CAAA,CAAA,CAGZ,EAEAX,EAAA,aAAA,CAAA,EAEAA,EAAA,YAAA,0kBCnEA,MAAAsB,EAAArB,GAAA,CAII,KAAA,CAAA,MAAAE,EAAA,MAAAW,EAAA,MAAAS,CAAA,EAAAtB,EACAuB,EAAAC,aAAAL,CAAA,EACAM,EAAAC,SAAA,IAAA,EACAC,EAAAC,EAAAH,CAAA,EAMAI,EAAAd,cAAAe,GAAA,CACIH,EAAA,SAAAG,CAAA,CAAqB,EAAA,CAAAH,CAAA,CAAA,EAIzBI,EAAAhB,EAAAA,YAAA,IAAA,CACIY,EAAA,OAAA,EACAJ,EAAA,kBAAArB,GAAAW,CAAA,CAAwC,EAAA,CAAAU,EAAAV,EAAAX,EAAAyB,CAAA,CAAA,EAG5CK,EAAAjB,EAAAA,YAAA,IAAA,CACIY,EAAA,OAAA,CAAc,EAAA,CAAAA,CAAA,CAAA,EAOlBrB,EAAAC,EAAAA,QAAA,IAAA,CACI,MAAAC,EAAA,CAAA,EAEA,OAAAe,EAAA,YAAArB,GACyC,CAAAA,GAAAqB,EAAA,YAAAV,IAErCL,EAAA,KAAA,0BAAA,EAGJA,EAAA,KAAA,GAAA,CAAqB,EAAA,CAAAe,EAAA,UAAAV,EAAAX,CAAA,CAAA,EAMzB,OAAAe,EAAA,KACI,KAAC,CAAA,IAAAQ,EAAQ,UAAA,oBAAAnB,CAAA,GACmC,YAAAuB,EACxC,UAAAE,EACA,aAAAC,EACA,SAAA,CACCV,EAAAJ,EAAAA,IAAA,MAAA,CAAA,UAAA,oCAAA,CAAA,CACqD,CAAA,CAAA,CAGlE;;"}