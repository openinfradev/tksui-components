{"version":3,"file":"TFormBox.stories-1e70d488.js","sources":["../../src/components/data-container/form-box/TFormBox.tsx","../../src/components/data-container/form-box/TFormSectionContext.ts","../../src/components/data-container/form-box/TFormSection.tsx","../../src/components/data-container/form-box/TFormRow.tsx","../../src/components/data-container/form-box/TFormItem.tsx"],"sourcesContent":["import {FormEvent, useMemo} from 'react';\nimport {TFormBoxProps} from './TFormBox.interface';\n\n\nfunction TFormBox(props: TFormBoxProps) {\n\n    // region [Styles]\n\n\n    const rootClass = useMemo((): string => {\n        const clazz: string[] = [];\n\n        if (props.className) clazz.push(props.className);\n\n        return clazz.join(' ');\n    }, [props.className]);\n\n    // endregion\n\n\n    // region [Templates]\n\n    return (\n        <form className={`t-form-box ${rootClass}`} onSubmit={(e: FormEvent) => e.preventDefault()}>\n\n            <div className={'t-form-box__content'}> {props.children} </div>\n\n            {\n                (props.leftAction || props.middleAction || props.rightAction) && (\n                    <div className={'t-form-box__form-action-bar'}>\n                        <div className={'t-form-box__form-action-bar__left-action'}>\n                            {props.leftAction && (props.leftAction)}\n                        </div>\n                        <div className={'t-form-box__form-action-bar__middle-action'}>\n                            {props.middleAction && (props.middleAction)}\n                        </div>\n                        <div className={'t-form-box__form-action-bar__right-action'}>\n                            {props.rightAction && (props.rightAction)}\n                        </div>\n                    </div>\n                )\n            }\n\n        </form>\n    );\n\n    // endregion\n\n\n}\n\nexport default TFormBox;\n","import {createContext} from 'react';\n\nexport const formSectionContext = createContext({\n    column: 2,\n    gridType: {\n        value: false,\n        rowHeight: '96px',\n    },\n});\n\nexport default formSectionContext;\n","import {useMemo} from 'react';\nimport {TFormSectionProps} from './TFormBox.interface';\nimport FormContext from './TFormSectionContext';\nimport TIcon from '../../icon/TIcon';\n\n\nfunction TFormSection(props: TFormSectionProps) {\n\n    // region [Styles]\n\n\n    const rootClass = useMemo((): string => {\n        const clazz: string[] = [];\n\n        if (props.className) { clazz.push(props.className); }\n        if (props.gridType) { clazz.push('t-form-section--grid-type'); }\n\n        return clazz.join(' ');\n    }, [props.className, props.gridType]);\n\n\n    // endregion\n\n\n    // region [Templates]\n\n    return (\n        <section className={`t-form-section ${rootClass}`}>\n            {\n                props.label && (\n                    <h3 className={'t-form-section__label'}>{props.label}</h3>\n                )\n            }\n            <div className={'t-form-section__content'}>\n                {\n                    props.information && (\n                        <div className={'t-form-section__content__info'}>\n                            <TIcon small className={'t-form-section__content__info__icon'} color={'#666666'}>t_information</TIcon>\n                            <div className={'t-form-section__content__info__content'}>\n                                {\n                                    props.information\n                                        .split('\\n')\n                                        .map((token, index) => <div key={index}>{token}</div>)\n                                }\n                            </div>\n                        </div>\n                    )\n                }\n\n                <FormContext.Provider\n                    value={{column: props.column, gridType: {value: props.gridType, rowHeight: props.gridTypeRowHeight ?? '96px'}}}>\n                    {props.children}\n                </FormContext.Provider>\n            </div>\n        </section>\n    );\n\n    // endregion\n\n}\n\nexport default TFormSection;\n","import {CSSProperties, useContext, useMemo} from 'react';\nimport {TFormRowProps} from './TFormBox.interface';\nimport FormContext from './TFormSectionContext';\n\nfunction TFormRow(props: TFormRowProps) {\n\n    const {gridType} = useContext(FormContext);\n\n    // region [Styles]\n\n    const rootClass = useMemo((): string => {\n        const clazz: string[] = [];\n\n        if (props.className) { clazz.push(props.className); }\n\n        return clazz.join(' ');\n    }, [props.className]);\n\n    const rootStyle: CSSProperties = useMemo(() => {\n        let style: CSSProperties = {};\n\n        if (gridType.value) { style = {flex: `0 0 ${gridType.rowHeight}`}; }\n\n        if (props.style) { style = {...props.style}; }\n\n\n        return style;\n    }, [gridType.rowHeight, gridType.value, props.style]);\n\n\n    // endregion\n\n\n    // region [Templates]\n\n    return (\n        <div className={`t-form-row ${rootClass}`} style={rootStyle}>\n            {props.children}\n        </div>\n    );\n\n    // endregion\n\n\n}\n\nexport default TFormRow;\n","import {CSSProperties, useContext, useMemo} from 'react';\nimport {TFormItemProps} from './TFormBox.interface';\nimport FormContext from './TFormSectionContext';\n\nfunction TFormItem(props: TFormItemProps) {\n\n    // region [Hooks]\n\n    const {column} = useContext(FormContext);\n\n\n    // endregion\n\n\n    // region [Styles]\n\n    const rootClass = useMemo((): string => {\n        const clazz: string[] = [];\n\n        if (props.className) { clazz.push(props.className); }\n        if (props.required) { clazz.push('t-form-item--required'); }\n\n        return clazz.join(' ');\n    }, [props.className, props.required]);\n\n    const rootStyle = useMemo((): CSSProperties => {\n        let style: CSSProperties = {};\n\n        if (props.style) { style = {...props.style}; }\n        style.width = `calc(100% / ${column} * ${props.span || 1})`;\n\n        return style;\n    }, [column, props.span, props.style]);\n\n    const labelStyle = useMemo((): CSSProperties => {\n        return {marginBottom: props.labelMarginBottom};\n    }, [props.labelMarginBottom]);\n\n    const contentStyle = useMemo((): CSSProperties => {\n        let style: CSSProperties = {};\n\n        if (props.contentStyle) { style = {...props.contentStyle}; }\n\n        return style;\n    }, [props.contentStyle]);\n\n    // endregion\n\n\n    // region [Templates]\n\n    return (\n        <span className={`t-form-item ${rootClass}`}\n              style={rootStyle}\n        >\n            {\n                props.label && (\n                    <label className={'t-form-item__label'}\n                           style={labelStyle}>\n                        {props.label}\n                    </label>\n                )\n            }\n            <div className={'t-form-item__content'}\n                 style={contentStyle}>\n                {props.children}\n            </div>\n        </span>\n    );\n\n    // endregion\n\n\n}\n\nTFormItem.defaultProps = {\n    labelBottomMargin: '8px',\n};\n\nexport default TFormItem;\n"],"names":["TFormBox","props","rootClass","useMemo","clazz","jsxs","e","jsx","formSectionContext","createContext","TFormSection","TIcon","token","index","FormContext","TFormRow","gridType","useContext","rootStyle","style","TFormItem","column","labelStyle","contentStyle"],"mappings":"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"}