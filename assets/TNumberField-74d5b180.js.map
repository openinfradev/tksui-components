{"version":3,"file":"TNumberField-74d5b180.js","sources":["../../src/components/input/number-field/TNumberField.tsx"],"sourcesContent":["import {CSSProperties, forwardRef, KeyboardEvent, Ref, useCallback, useImperativeHandle, useMemo, useRef, useState} from 'react';\nimport useValidator from '@/common/hook/UseValidator';\nimport {TNumberFieldProps, TNumberFieldRef} from './TNumberField.interface';\n\n\nconst TNumberField = forwardRef((props: TNumberFieldProps, ref: Ref<TNumberFieldRef>) => {\n\n\n    // region [Hooks]\n\n    const [hasFocus, setHasFocus] = useState<boolean>(false);\n    const validator = useValidator(props.value, props.rules, props.successMessage);\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    useImperativeHandle(ref, () => ({\n        focus() {\n            inputRef?.current?.focus();\n        },\n        validate() {\n            return validator.validate();\n        },\n        manualValidate(result: boolean, message?: string) {\n            validator.manualValidate(result, message);\n        },\n    }));\n\n    // endregion\n\n\n    // region [Styles]\n\n    const rootClass: string = useMemo((): string => {\n        const clazz: string[] = [];\n\n        if (props.className) { clazz.push(props.className); }\n        if (props.disabled) { clazz.push('t-number-field--disabled'); }\n        if (!validator.result) { clazz.push('t-number-field--failure'); }\n        if (validator.result && validator.message) { clazz.push('t-number-field--success'); }\n        if (hasFocus) { clazz.push('t-number-field--focused'); }\n\n        clazz.push(`t-number-field--${props.type}`);\n\n        return clazz.join(' ');\n    }, [props.className, props.disabled, props.type, validator.result, validator.message, hasFocus]);\n\n\n    const inputClass: string = useMemo((): string => {\n        const clazz: string[] = [];\n\n        if (props.disabled) clazz.push('t-number-field__container__input--disabled');\n\n        return clazz.join(' ');\n    }, [props.disabled]);\n\n\n    const incrementButtonClass: string = useMemo((): string => {\n\n\n        if ((props.max !== undefined && Number.parseInt(props.value, 10) >= props.max) || props.disabled) {\n            return 't-number-field__container__action-icon__increment--disabled';\n        }\n\n        return '';\n    }, [props.max, props.disabled, props.value]);\n\n    const decrementButtonClass: string = useMemo((): string => {\n\n        if ((props.min !== undefined && Number.parseInt(props.value, 10) <= props.min) || props.disabled) {\n            return 't-number-field__container__action-icon__decrement--disabled';\n        }\n\n        return '';\n    }, [props.disabled, props.min, props.value]);\n\n\n    const labelClass: string = useMemo((): string => {\n        const clazz: string[] = [];\n\n        if (props.required) { clazz.push('t-number-field__label--required'); }\n\n        return clazz.join(' ');\n    }, [hasFocus, props.value, props.required]);\n\n\n    const rootStyle: CSSProperties = useMemo((): CSSProperties => {\n        let style: CSSProperties = {};\n\n        if (props.style) style = {...props.style};\n        if (props.width) style = {...style, width: props.width};\n\n        return style;\n    }, [props.style, props.width]);\n\n\n    // endregion\n\n    // region [Privates]\n\n    const adjustValue = useCallback((): void => {\n        const value: number = Number.parseInt(props.value, 10);\n\n        // Check NaN\n        if (Number.isNaN(value)) {\n            inputRef.current.value = '';\n            props.onChange('');\n            return;\n        }\n\n        // Check violating step\n        const remainder: number = (value - props.min) % props.step;\n        if (remainder !== 0) {\n            props.onChange(`${value - remainder}`);\n        }\n\n    }, [props]);\n\n    const inputPlaceholder: string = useMemo((): string => {\n        if (props.label && !hasFocus) { return ''; }\n        if (props.disabled) { return ''; }\n\n        return props.placeholder;\n\n    }, [props.label, hasFocus, props.disabled, props.placeholder]);\n\n\n    // endregion\n\n\n    // region [Events]\n\n    const onFocus = useCallback((): void => {\n        validator.clearValidation();\n        setHasFocus(true);\n    }, [validator]);\n\n    const onBlur = useCallback((): void => {\n\n        adjustValue();\n\n        if (!props.lazy) { validator.validate(); }\n        setHasFocus(false);\n    }, [adjustValue, props.lazy, validator]);\n\n    const isInputtableValue = useCallback((targetValue: string): boolean => {\n\n        if (targetValue === '') { return true; }\n        const value = Number.parseInt(targetValue, 10);\n\n\n        if (Number.isNaN(value)) { return false; }\n\n        return value >= props.min && value <= props.max;\n\n\n    }, [props.max, props.min]);\n\n    const onChange = useCallback((e): void => {\n\n        if (isInputtableValue(e.target.value)) {\n            props.onChange(e.target.value);\n        }\n    }, [isInputtableValue, props]);\n\n\n    const onClickStepUp = useCallback((): void => {\n\n        inputRef.current.stepUp();\n        if (props.value !== inputRef.current.value) {\n            props.onChange(inputRef.current.value);\n        }\n\n    }, [props]);\n\n    const onClickStepDown = useCallback((): void => {\n\n        inputRef.current.stepDown();\n        if (props.value !== inputRef.current.value) {\n            props.onChange(inputRef.current.value);\n        }\n    }, [props]);\n\n    const onKeyDown = useCallback((event: KeyboardEvent<HTMLInputElement>): void => {\n\n        if (event.key === '-' && props.min >= -1) {\n            event.preventDefault();\n            props.onChange(`${props.min}`);\n        }\n        if (event.key === '+') {\n            event.preventDefault();\n        }\n\n        if (event.key === 'Enter' && props.onKeyDownEnter) {\n            props.onKeyDownEnter(event);\n        }\n\n\n        if (props.onKeyDown) {\n            props.onKeyDown(event);\n        }\n    }, [props]);\n\n    // endregion\n\n\n    return (\n        <div className={`t-number-field ${rootClass}`}\n             style={rootStyle}\n             data-testid={'number-field-root'}>\n            {\n                props.label && (\n                    <label className={`t-number-field__label ${labelClass}`}>\n                        {props.label}\n                    </label>\n                )\n            }\n            <div className={'t-number-field__container'}\n                 data-testid={'number-field-root__container'}>\n                <input ref={inputRef}\n                       type={'number'}\n                       tabIndex={props.disabled ? -1 : 0}\n                       className={`t-number-field__container__input ${inputClass}`}\n                       disabled={props.disabled}\n                       placeholder={inputPlaceholder}\n                       value={props.value}\n                       min={props.min}\n                       max={props.max}\n                       step={props.step}\n                       onChange={onChange}\n                       onKeyDown={onKeyDown}\n                       onFocus={onFocus}\n                       onBlur={onBlur}\n                />\n                {\n\n                    <div className={'t-number-field__container__action-icon'}>\n                        <div className={`t-number-field__container__action-icon__increment ${incrementButtonClass}`}\n                             onClick={onClickStepUp}\n                             data-testid={'number-field__increment-button'}>\n                            ▴\n                        </div>\n                        <div className={`t-number-field__container__action-icon__decrement ${decrementButtonClass}`}\n                             onClick={onClickStepDown}\n                             data-testid={'number-field__decrement-button'}>\n                            ▴\n                        </div>\n                    </div>\n                }\n            </div>\n            <div className={'t-number-field__details'}>\n                <div className={'t-number-field__details__message'}>\n                    {\n                        validator.message\n                        && `${validator.message}`\n                    }\n                </div>\n            </div>\n        </div>\n    );\n});\nTNumberField.defaultProps = {\n    type: 'outline',\n    lazy: true,\n    min: -100000000000,\n    max: 100000000000,\n    step: 1,\n};\n\nTNumberField.displayName = 'TNumberField';\n\n\nexport default TNumberField;\n"],"names":["TNumberField","forwardRef","props","ref","hasFocus","setHasFocus","useState","validator","useValidator","inputRef","useRef","useImperativeHandle","_a","result","message","rootClass","useMemo","clazz","inputClass","incrementButtonClass","decrementButtonClass","labelClass","rootStyle","style","adjustValue","useCallback","value","remainder","inputPlaceholder","onFocus","onBlur","isInputtableValue","targetValue","onChange","e","onClickStepUp","onClickStepDown","onKeyDown","event","jsxs","jsx"],"mappings":"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"}