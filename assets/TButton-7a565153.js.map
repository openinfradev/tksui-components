{"version":3,"file":"TButton-7a565153.js","sources":["../../src/components/button/button/TButton.interface.ts","../../src/components/button/button/TButton.tsx"],"sourcesContent":["import {KeyboardEvent, MouseEvent, ReactNode} from 'react';\nimport {TBaseProps, TBaseTooltipProps} from '@/common/base/TBase.interface';\n\nexport const buttonSize = {xsmall: 'xsmall', small: 'small', medium: 'medium', large: 'large'};\ntype buttonSize = typeof buttonSize[keyof typeof buttonSize];\n\nexport interface TButtonProps extends TBaseProps, TBaseTooltipProps {\n    children: ReactNode,\n    main?: boolean,\n    primary?: boolean,\n    point?: boolean,\n\n    icon?: string,\n\n    // size\n    size?: buttonSize,\n    xsmall?: boolean,\n    small?: boolean,\n    medium?: boolean,\n    large?: boolean,\n    \n    width?: string,\n\n    disabled?: boolean,\n    rounded?: boolean,\n    loading?: boolean,\n\n    onClick?: (event?: MouseEvent | KeyboardEvent) => void,\n}\n\n\nexport interface TButtonRef {\n    focus(): void,\n    click(): void,\n}\n","import {CSSProperties, forwardRef, KeyboardEvent, MouseEvent, Ref, useCallback, useImperativeHandle, useMemo, useRef} from 'react';\nimport {buttonSize, TButtonProps, TButtonRef} from './TButton.interface';\nimport useRipple from '@/common/hook/UseRipple';\nimport TIcon from '../../icon/TIcon';\n\n\nconst TButton = forwardRef((props: TButtonProps, ref: Ref<TButtonRef>) => {\n\n    // region [Hooks]\n\n    const rootRef = useRef<HTMLButtonElement>(null);\n\n    const ripple = useRipple(rootRef);\n\n    useImperativeHandle(ref, () => ({\n        focus() {\n            rootRef?.current?.focus();\n        },\n        click() {\n            if (!props.disabled && props.onClick) {\n                props.onClick();\n            }\n        },\n    }));\n\n    // endregion\n\n    // region [Events]\n\n    const onMouseDown = useCallback((event: MouseEvent): void => {\n        if (!props.disabled) {\n            ripple.register(event);\n        }\n    }, [props.disabled, ripple]);\n\n    const onMouseUp = useCallback((event): void => {\n        ripple.remove();\n        if (!props.disabled && props.onClick) {\n            props.onClick(event);\n        }\n    }, [props, ripple]);\n\n    const onMouseLeave = useCallback((): void => {\n        ripple.remove();\n    }, [ripple]);\n\n    const onKeyDown = useCallback((event: KeyboardEvent): void => {\n        if (event.key === 'Enter' || event.key === ' ') {\n            ripple.register(event);\n        }\n    }, [ripple]);\n\n    const onKeyUp = useCallback((event: KeyboardEvent): void => {\n        if (event.key === 'Enter' || event.key === ' ') {\n            ripple.remove();\n            if (props.onClick) {\n                props.onClick(event);\n            }\n        }\n    }, [props, ripple]);\n\n\n    // endregion\n\n\n    // region [Styles]\n\n    const $_size = useMemo(() => {\n        if (props.size && props.size in buttonSize) { return props.size; }\n        if (props.xsmall) { return buttonSize.xsmall; }\n        if (props.small) { return buttonSize.small; }\n        if (props.medium) { return buttonSize.medium; }\n        if (props.large) { return buttonSize.large; }\n        return buttonSize.medium;\n    }, [props.size, props.xsmall, props.small, props.medium, props.large]);\n\n    const contentIconSize = useMemo(() => {\n        if ($_size === 'xsmall') { return 'small'; }\n        if ($_size === 'small') { return 'small'; }\n        if ($_size === 'medium') { return 'small'; }\n        if ($_size === 'large') { return 'large'; }\n        return 'medium';\n    }, [$_size]);\n\n\n    const rootClass: string = useMemo(() => {\n        const clazz = [];\n\n        clazz.push(`t-button--${$_size}`);\n        if (props.className) { clazz.push(props.className); }\n        if (props.primary) { clazz.push('t-button--primary'); }\n        if (props.point) { clazz.push('t-button--point'); }\n        if (props.main) { clazz.push('t-button--main'); }\n        if (props.disabled) { clazz.push('t-button--disabled'); }\n        if (props.rounded) { clazz.push('t-button--rounded'); }\n        if (props.loading) { clazz.push('t-button--loading'); }\n\n        return clazz.join(' ');\n    }, [$_size, props.className, props.point, props.primary, props.main, props.disabled, props.rounded, props.loading]);\n\n    const rootStyle: CSSProperties = useMemo(() => {\n        let style: CSSProperties = {};\n\n        if (props.width) { style = {...style, width: props.width}; }\n        if (props.style) { style = {...style, ...props.style}; }\n\n        return style;\n    }, [props.style, props.width]);\n\n    // endregion\n\n    return (\n        <button className={`t-button ${rootClass}`}\n                style={rootStyle}\n                onMouseDown={onMouseDown}\n                onMouseUp={onMouseUp}\n                onMouseLeave={onMouseLeave}\n                onKeyDown={onKeyDown}\n                onKeyUp={onKeyUp}\n                tabIndex={(props.disabled || props.loading) ? -1 : 0}\n                data-tooltip-id={props.tooltipId}\n                data-tooltip-content={props.tooltipContent}\n                data-tooltip-place={props.tooltipPlace}\n                data-tooltip-hidden={props.tooltipHidden}\n                ref={rootRef}>\n            {\n                !props.loading\n                    ? (\n                        <div className={'t-button__content'}>\n                            {\n                                props.icon && (\n                                    <TIcon size={contentIconSize} className={'t-button__content__icon'}>{props.icon}</TIcon>\n                                )\n                            }\n                            {props.children}\n                        </div>\n                    )\n                    : (\n                        <div className={'t-button__content t-button__content--loading'}>\n                            <div className={'t-button__content--loading__slice'}/>\n                            <div className={'t-button__content--loading__slice'}/>\n                            <div className={'t-button__content--loading__slice'}/>\n                        </div>\n                    )\n            }</button>\n    );\n});\n\nTButton.displayName = 'TButton';\n\nexport default TButton;\n"],"names":["buttonSize","TButton","forwardRef","props","ref","rootRef","useRef","ripple","useRipple","useImperativeHandle","_a","onMouseDown","useCallback","event","onMouseUp","onMouseLeave","onKeyDown","onKeyUp","$_size","useMemo","contentIconSize","rootClass","clazz","rootStyle","style","jsx","jsxs","TIcon"],"mappings":"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"}