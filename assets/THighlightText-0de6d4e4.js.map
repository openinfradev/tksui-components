{"version":3,"file":"THighlightText-0de6d4e4.js","sources":["../../src/components/data-container/highlight-text/THighlightText.tsx"],"sourcesContent":["import {THighlightTextProps} from './THightlightText.interface';\n\nfunction THighlightText(props: THighlightTextProps) {\n    \n    // region [ETCs]\n    \n    function parseHighlightedText(): JSX.Element {\n        const keyword = props.keyword.toLowerCase();\n    \n        if (keyword !== '' && props.children.toString().toLowerCase().includes(keyword)) {\n            const escapedKeyword = keyword\n                .replaceAll('(', '\\\\(')\n                .replaceAll(')', '\\\\)');\n            \n            const tokens = props.children.toString()\n                .split(new RegExp(`(${escapedKeyword})`, 'gi'));\n\n            return (<>\n                {\n                    tokens.map((token: string, index: number) => (token.toLowerCase() === keyword\n                        ? <mark key={index}>{token}</mark>\n                        : token\n                    ))\n                }\n            </>);\n        }\n\n        return <span>{props.children}</span>;\n\n    }\n    \n    // endregion\n    \n    // region [Templates]\n    \n    return parseHighlightedText();\n    \n    // endregion\n    \n    \n}\n\nexport default THighlightText;\n"],"names":["THighlightText","props","parseHighlightedText","keyword","escapedKeyword","tokens","jsx","Fragment","token","index"],"mappings":"8CAEA,SAAAA,EAAAC,EAAA,CAII,SAAAC,GAAA,CACI,MAAAC,EAAAF,EAAA,QAAA,YAAA,EAEA,GAAAE,IAAA,IAAAF,EAAA,SAAA,SAAA,EAAA,YAAA,EAAA,SAAAE,CAAA,EAAA,CACI,MAAAC,EAAAD,EAAA,WAAA,IAAA,KAAA,EAAA,WAAA,IAAA,KAAA,EAIAE,EAAAJ,EAAA,SAAA,SAAA,EAAA,MAAA,IAAA,OAAA,IAAAG,CAAA,IAAA,IAAA,CAAA,EAGA,OAAAE,EAAA,IAAAC,WAAA,CAAA,SAAAF,EAAA,IAAA,CAAAG,EAAAC,IAAAD,EAAA,YAAA,IAAAL,EAAAG,EAAAA,IAAA,OAAA,CAAA,SAAAE,CAAA,EAAAC,CAAA,EAAAD,CAAA,CAAA,CAAA,CAOA,CAGJ,OAAAF,EAAAA,IAAA,OAAA,CAAA,SAAAL,EAAA,QAAA,CAAA,CAA6B,CAQjC,OAAAC,EAAA,CAKJ"}