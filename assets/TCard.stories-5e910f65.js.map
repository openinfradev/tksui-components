{"version":3,"file":"TCard.stories-5e910f65.js","sources":["../../src/components/data-container/card/TCard.tsx","../../src/components/data-container/card/TCardHeader.tsx","../../src/components/data-container/card/TCardContent.tsx"],"sourcesContent":["import {CSSProperties, useMemo} from 'react';\nimport {TCardProps} from './TCard.interface';\n\nconst TCard = (props: TCardProps) => {\n\n    // region [Templates]\n\n    const rootClass = useMemo((): string => {\n        const clazz: string[] = [];\n\n        if (props.className) { clazz.push(props.className); }\n        if (props.clickable) { clazz.push('t-card--clickable'); }\n        if (props.selected) { clazz.push('t-card--selected'); }\n\n        return clazz.join(' ');\n    }, [props.className, props.clickable, props.selected]);\n\n    const rootStyle = useMemo((): CSSProperties => {\n        let style: CSSProperties = {};\n\n        if (props.width) { style = {...style, width: props.width}; }\n        if (props.height) { style = {...style, height: props.height}; }\n        if (props.style) { style = {...style, ...props.style}; }\n\n        return style;\n    }, [props.height, props.style, props.width]);\n\n    // endregion\n\n    return (\n        <div className={`t-card ${rootClass}`} style={rootStyle} onClick={props.onClick}>\n            {props.children}\n        </div>\n    );\n};\n\nTCard.defaultProps = {\n};\n\nTCard.displayName = 'TCard';\n\n\nexport default TCard;\n","import {CSSProperties, useMemo} from 'react';\nimport {TCardHeaderProps} from './TCard.interface';\n\nconst TCardHeader = (props: TCardHeaderProps) => {\n\n    // region [Hooks]\n\n    const {className, style} = props;\n\n\n    // region [Privates]\n\n\n    // endregion\n\n\n    // region [Templates]\n\n    const rootClass = useMemo((): string => {\n        const clazz: string[] = [];\n\n        if (className) { clazz.push(className); }\n\n        return clazz.join(' ');\n    }, [className]);\n\n    const rootStyle = useMemo((): CSSProperties => {\n        if (style) { return style; }\n        return {};\n    }, [style]);\n\n    // endregion\n\n    return (\n        <header className={`t-card-header ${rootClass}`} style={rootStyle}>\n            <h4 className={'t-card-header__title'}>{props.title}</h4>\n            <div className={'t-card-header__sub-title'}>{props.subTitle}</div>\n        </header>\n    );\n};\n\nTCardHeader.defaultProps = {\n};\n\nTCardHeader.displayName = 'TCard';\n\n\nexport default TCardHeader;\n","import {CSSProperties, useMemo} from 'react';\nimport {TCardContentProps, TCardHeaderProps} from './TCard.interface';\n\nconst TCardContent = (props: TCardContentProps) => {\n\n    // region [Hooks]\n\n    const {className, style} = props;\n\n\n    // region [Privates]\n\n\n    // endregion\n\n\n    // region [Templates]\n\n    const rootClass = useMemo((): string => {\n        const clazz: string[] = [];\n\n        if (className) { clazz.push(className); }\n\n        return clazz.join(' ');\n    }, [className]);\n\n    const rootStyle = useMemo((): CSSProperties => {\n        if (style) { return style; }\n        return {};\n    }, [style]);\n\n    // endregion\n\n    return (\n        <section className={`t-card-content ${rootClass}`} style={rootStyle}>\n            {props.children}\n        </section>\n    );\n};\n\nTCardContent.defaultProps = {\n};\n\nTCardContent.displayName = 'TCard';\n\n\nexport default TCardContent;\n"],"names":["TCard","props","rootClass","useMemo","clazz","rootStyle","style","jsx","TCardHeader","className","jsxs","TCardContent"],"mappings":"kQAGA,MAAAA,EAAAC,GAAA,CAII,MAAAC,EAAAC,EAAAA,QAAA,IAAA,CACI,MAAAC,EAAA,CAAA,EAEA,OAAAH,EAAA,WAAuBG,EAAA,KAAAH,EAAA,SAAA,EACvBA,EAAA,WAAuBG,EAAA,KAAA,mBAAA,EACvBH,EAAA,UAAsBG,EAAA,KAAA,kBAAA,EAEtBA,EAAA,KAAA,GAAA,CAAqB,EAAA,CAAAH,EAAA,UAAAA,EAAA,UAAAA,EAAA,QAAA,CAAA,EAGzBI,EAAAF,EAAAA,QAAA,IAAA,CACI,IAAAG,EAAA,CAAA,EAEA,OAAAL,EAAA,QAAmBK,EAAA,CAAA,GAAAA,EAAA,MAAAL,EAAA,KAAA,GACnBA,EAAA,SAAoBK,EAAA,CAAA,GAAAA,EAAA,OAAAL,EAAA,MAAA,GACpBA,EAAA,QAAmBK,EAAA,CAAA,GAAAA,EAAA,GAAAL,EAAA,KAAA,GAEnBK,CAAO,EAAA,CAAAL,EAAA,OAAAA,EAAA,MAAAA,EAAA,KAAA,CAAA,EAKX,OAAAM,EAAAA,IAAA,MAAA,CAAA,UAAA,UAAAL,CAAA,GAAA,MAAAG,EAAA,QAAAJ,EAAA,QAAA,SAAAA,EAAA,QAAA,CAAA,CAKJ,EAEAD,EAAA,aAAA,CAAA,EAGAA,EAAA,YAAA,g0BCpCA,MAAAQ,EAAAP,GAAA,CAII,KAAA,CAAA,UAAAQ,EAAA,MAAAH,CAAA,EAAAL,EAWAC,EAAAC,EAAAA,QAAA,IAAA,CACI,MAAAC,EAAA,CAAA,EAEA,OAAAK,GAAiBL,EAAA,KAAAK,CAAA,EAEjBL,EAAA,KAAA,GAAA,CAAqB,EAAA,CAAAK,CAAA,CAAA,EAGzBJ,EAAAF,EAAAA,QAAA,IACIG,GACA,GAAQ,CAAAA,CAAA,CAAA,EAKZ,OAAAI,OAAA,SAAA,CAAA,UAAA,iBAAAR,CAAA,GAAA,MAAAG,EAAA,SAAA,CAEQE,EAAA,IAAA,KAAA,CAAA,UAAA,uBAAA,SAAAN,EAAA,MAAA,EAAoDM,EAAA,IAAA,MAAA,CAAA,UAAA,2BAAA,SAAAN,EAAA,SAAA,CACQ,CAAA,CAAA,CAGxE,EAEAO,EAAA,aAAA,CAAA,EAGAA,EAAA,YAAA,+iBCzCA,MAAAG,EAAAV,GAAA,CAII,KAAA,CAAA,UAAAQ,EAAA,MAAAH,CAAA,EAAAL,EAWAC,EAAAC,EAAAA,QAAA,IAAA,CACI,MAAAC,EAAA,CAAA,EAEA,OAAAK,GAAiBL,EAAA,KAAAK,CAAA,EAEjBL,EAAA,KAAA,GAAA,CAAqB,EAAA,CAAAK,CAAA,CAAA,EAGzBJ,EAAAF,EAAAA,QAAA,IACIG,GACA,GAAQ,CAAAA,CAAA,CAAA,EAKZ,OAAAC,EAAA,IAAA,UAAA,CAAA,UAAA,kBAAAL,CAAA,GAAA,MAAAG,EAAA,SAAAJ,EAAA,QAAA,CAAA,CAKJ,EAEAU,EAAA,aAAA,CAAA,EAGAA,EAAA,YAAA;;;"}