{"version":3,"file":"TPagination-3ace896b.js","sources":["../../src/components/data-container/pagination/TPagination.tsx"],"sourcesContent":["import {CSSProperties, forwardRef, Ref, useCallback, useEffect, useImperativeHandle, useMemo, useState} from 'react';\n\nimport {TPaginationProps, TPaginationRef} from './TPagination.interface';\nimport TIcon from '../../icon/TIcon';\n\n\nconst TPagination = forwardRef((props: TPaginationProps, ref: Ref<TPaginationRef>) => {\n\n\n    // region [Hooks]\n\n    const {onChangePageNumber} = props;\n\n    useImperativeHandle(ref, () => ({\n        nextPage(): void { onClickNextPage(); },\n        nextPageSet(): void { onClickNextPageSet(); },\n        previousPage(): void { onClickPreviousPage(); },\n        previousPageSet(): void { onClickPreviousPageSet(); },\n    }));\n\n    const [pageRange, setPageRange] = useState<{ min: number, max: number }>({min: 1, max: 1});\n\n    // endregion\n\n\n    // region [Styles]\n\n    const rootClass: string = useMemo((): string => {\n        const clazz: string[] = [];\n\n        if (props.className) { clazz.push(props.className); }\n\n        return clazz.join(' ');\n    }, [props.className]);\n\n\n    const rootStyle: CSSProperties = useMemo((): CSSProperties => {\n        let style: CSSProperties = {};\n\n        if (props.style) style = {...props.style};\n\n        return style;\n    }, [props.style]);\n\n    // endregion\n\n    // region [Privates]\n\n    const getPageRange = useCallback((currentPage: number, totalPages: number) => {\n        const min = Math.floor((currentPage - 1) / 10) * 10 + 1;\n        const max = Math.min(totalPages, min + 9);\n\n        return {min, max};\n    }, []);\n\n    const pageButtonClass = useCallback((page: number) => {\n        if (page === props.pageNumber) {\n            return 't-pagination__page-container__page__button--active';\n        }\n        return '';\n    }, [props.pageNumber]);\n\n    const prevPageButtonClass = useMemo(() => {\n        if (props.pageNumber === 1) {\n            return 't-pagination__nav-button-container__button--disabled';\n        }\n        return '';\n    }, [props.pageNumber]);\n\n    const nextPageButtonClass = useMemo(() => {\n        if (props.pageNumber === props.totalPages) {\n            return 't-pagination__nav-button-container__button--disabled';\n        }\n        return '';\n    }, [props.pageNumber, props.totalPages]);\n\n\n    // endregion\n\n\n    // region [Events]\n\n    const onClickPageNumber = useCallback((pageNumber: number) => {\n        onChangePageNumber(pageNumber);\n    }, [onChangePageNumber]);\n\n    const onClickNextPage = useCallback(() => {\n        if (props.pageNumber === props.totalPages) { return; }\n        const targetPage = props.pageNumber + 1;\n        onChangePageNumber(targetPage);\n    }, [onChangePageNumber, props.pageNumber, props.totalPages]);\n\n    const onClickNextPageSet = useCallback(() => {\n        if (props.pageNumber === props.totalPages) { return; }\n        const targetPage = Math.min(pageRange.max + 1, props.totalPages);\n        onChangePageNumber(targetPage);\n    }, [onChangePageNumber, pageRange.max, props.pageNumber, props.totalPages]);\n\n    const onClickPreviousPage = useCallback(() => {\n        if (props.pageNumber === 1) { return; }\n        const targetPage = props.pageNumber - 1;\n        onChangePageNumber(targetPage);\n    }, [onChangePageNumber, props.pageNumber]);\n\n    const onClickPreviousPageSet = useCallback(() => {\n        if (props.pageNumber === 1) { return; }\n        const targetPage = Math.max(pageRange.min - 1, 1);\n        onChangePageNumber(targetPage);\n    }, [onChangePageNumber, pageRange.min, props.pageNumber]);\n\n\n    // endregion\n\n    // region [Lifecycles]\n\n    useEffect(() => {\n        const range = getPageRange(props.pageNumber, props.totalPages);\n        setPageRange(range);\n    }, [getPageRange, props.pageNumber, props.totalPages]);\n\n\n    // endregion\n\n\n    return (\n        <nav className={`t-pagination ${rootClass}`} style={rootStyle}>\n\n            <span className={'t-pagination__nav-button-container'}>\n                <TIcon className={`t-pagination__nav-button-container__button ${prevPageButtonClass}`}\n                       clickable\n                       small\n                       disabled={props.pageNumber === 1}\n                       onClick={onClickPreviousPageSet}\n                       onKeyDownEnter={onClickPreviousPageSet}\n                       onKeyDownSpace={onClickPreviousPageSet}>t_navigate_left_double</TIcon>\n                <TIcon className={`t-pagination__nav-button-container__button ${prevPageButtonClass}`}\n                       clickable\n                       small\n                       disabled={props.pageNumber === 1}\n                       onClick={onClickPreviousPage}\n                       onKeyDownEnter={onClickPreviousPage}\n                       onKeyDownSpace={onClickPreviousPage}>t_navigate_left</TIcon>\n            </span>\n\n            <ul className={'t-pagination__page-container'}>\n                {\n                    Array(pageRange.max - pageRange.min + 1).fill(null).map((_, index) => pageRange.min + index)\n                        .map((page) => (\n                            <li key={page} className={'t-pagination__page-container__page'}>\n                                <button className={`t-pagination__page-container__page__button ${pageButtonClass(page)}`}\n                                        onClick={() => onClickPageNumber(page)}\n                                >{page}</button>\n                            </li>\n                        ))\n                }\n            </ul>\n\n            <span className={'t-pagination__nav-button-container'}>\n                <TIcon className={`t-pagination__nav-button-container__button ${nextPageButtonClass}`}\n                       clickable\n                       small\n                       disabled={props.pageNumber === props.totalPages}\n                       onClick={onClickNextPage}\n                       onKeyDownEnter={onClickNextPage}\n                       onKeyDownSpace={onClickNextPage}>t_navigate_right</TIcon>\n                <TIcon className={`t-pagination__nav-button-container__button ${nextPageButtonClass}`}\n                       clickable\n                       small\n                       disabled={props.pageNumber === props.totalPages}\n                       onClick={onClickNextPageSet}\n                       onKeyDownEnter={onClickNextPageSet}\n                       onKeyDownSpace={onClickNextPageSet}>t_navigate_right_double</TIcon>\n            </span>\n        </nav>\n    );\n});\nTPagination.defaultProps = {};\n\nTPagination.displayName = 'TPagination';\n\n\nexport default TPagination;\n"],"names":["TPagination","forwardRef","props","ref","onChangePageNumber","useImperativeHandle","onClickNextPage","onClickNextPageSet","onClickPreviousPage","onClickPreviousPageSet","pageRange","setPageRange","useState","rootClass","useMemo","clazz","rootStyle","style","getPageRange","useCallback","currentPage","totalPages","min","max","pageButtonClass","page","prevPageButtonClass","nextPageButtonClass","onClickPageNumber","pageNumber","targetPage","useEffect","range","jsxs","jsx","TIcon","_","index"],"mappings":"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"}