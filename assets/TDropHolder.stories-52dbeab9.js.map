{"version":3,"file":"TDropHolder.stories-52dbeab9.js","sources":["../../src/components/data-container/drop-holder/TDropHolder.tsx"],"sourcesContent":["import {CSSProperties, MouseEvent, MouseEventHandler, ReactNode, useCallback, useMemo, useRef, useState} from 'react';\nimport {DropHolderAlignment, TDropHolderItem, TDropHolderProps} from './TDropHolder.interface';\nimport useClickOutside from '@/common/hook/UseClickOutside';\n\n\nconst TDropHolder = (props: TDropHolderProps) => {\n\n    // region [Hooks]\n\n    const [isOpened, setIsOpened] = useState(false);\n    const rootRef = useRef<HTMLDivElement>(null);\n    useClickOutside(rootRef, () => close());\n\n    // endregion\n\n\n    // region [Styles]\n\n    const rootClass = useMemo((): string => {\n        const clazz: string[] = [];\n\n        if (props.className) { clazz.push(props.className); }\n        if (isOpened) { clazz.push('t-drop-holder--open'); }\n\n        return clazz.join(' ');\n    }, [props.className, isOpened]);\n\n    const itemClass = useCallback((item: TDropHolderItem): string => {\n        const clazz: string[] = [];\n\n        if (item.disabled) { clazz.push('t-drop-holder__items__item--disabled'); }\n        if (item.divideSection) { clazz.push('t-drop-holder__items__item--divider'); }\n\n        return clazz.join(' ');\n    }, []);\n\n\n    const rootStyle = useMemo((): CSSProperties => {\n\n        let style: CSSProperties = {};\n\n        if (props.style) style = {...style, ...props.style};\n\n        return style;\n    }, [props.style]);\n\n\n    const anchorStyle = useMemo((): CSSProperties => {\n        if (props.alignment === 'top-left') { return {top: `calc(0px - ${props.offset})`, left: '0'}; }\n        if (props.alignment === 'top-center') { return {top: `calc(0px - ${props.offset})`, left: '50%'}; }\n        if (props.alignment === 'top-right') { return {top: `calc(0px - ${props.offset})`, right: '0'}; }\n        if (props.alignment === 'bottom-left') { return {top: `calc(100% + ${props.offset})`, left: '0'}; }\n        if (props.alignment === 'bottom-center') { return {top: `calc(100% + ${props.offset})`, left: '50%'}; }\n        if (props.alignment === 'bottom-right') { return {top: `calc(100% + ${props.offset})`, right: '0'}; }\n\n        return {top: '100%', right: '0'}; // bottom-center\n    }, [props.alignment, props.offset]);\n\n    const itemsStyle = useMemo((): CSSProperties => {\n        if (props.alignment === 'top-left') { return {transform: 'translateY(-100%) translateX(0)'}; }\n        if (props.alignment === 'top-center') { return {transform: 'translateY(-100%) translateX(-50%)'}; }\n        if (props.alignment === 'top-right') { return {transform: 'translateY(-100%) translateX(-100%)'}; }\n        if (props.alignment === 'bottom-left') { return {transform: 'translateX(0)'}; }\n        if (props.alignment === 'bottom-center') { return {transform: 'translateX(-50%)'}; }\n        if (props.alignment === 'bottom-right') { return {transform: 'translateX(-100%)'}; }\n\n        return {transform: 'translateX(-50%)'}; // bottom-center\n    }, [props.alignment]);\n\n    // endregion\n\n\n    // region [Events]\n\n    const onClickRoot = (): void => {\n        if (isOpened) {\n            close();\n        } else {\n            open();\n        }\n    };\n\n    const onClickItem = (event: MouseEvent, handler: MouseEventHandler): void => {\n        event.stopPropagation();\n        if (handler) { handler(event); }\n        close();\n    };\n\n    // endregion\n\n\n    // region [Privates]\n\n    const open = (): void => {\n        setIsOpened(true);\n    };\n\n    const close = (): void => {\n        setIsOpened(false);\n    };\n\n    // endregion\n\n\n    // region [Templates]\n\n\n    const getItemTemplate = useCallback((item: TDropHolderItem): ReactNode => {\n        if (item.itemTemplate) {\n            return item.itemTemplate(item);\n        }\n        if (props.itemTemplate) {\n            return props.itemTemplate(item);\n        }\n        return (<div>{item[props.textKey]}</div>);\n    }, [props]);\n\n    // endregion\n\n    return (\n        <div className={`t-drop-holder ${rootClass}`}\n             style={rootStyle}\n             ref={rootRef}\n             onClick={onClickRoot}>\n            <div className={'t-drop-holder__anchor'} style={anchorStyle}>\n                {\n                    isOpened && (\n                        !props.customItem ? (\n                            <div className={'t-drop-holder__items'} style={itemsStyle}>\n                                {\n                                    props.items?.map((item, index) => (\n                                        <div key={index}\n                                             className={`t-drop-holder__items__item ${itemClass(item)}`}\n                                             onClick={(event) => onClickItem(event, item.onClick)}\n                                        >\n                                            {getItemTemplate(item)}\n                                        </div>\n                                    ))\n                                }\n                            </div>\n                        ) : (\n                            <div className={'t-drop-holder__items t-drop-holder__items--custom'} style={itemsStyle}>\n                                {\n                                    props.customItem\n                                }\n                            </div>\n                        )\n\n                    )\n                }\n            </div>\n            <div className={'t-drop-holder__holder'}>\n                {props.children}\n            </div>\n        </div>\n    );\n\n};\n\nTDropHolder.defaultProps = {\n    alignment: 'bottom-center' as DropHolderAlignment,\n    textKey: 'text',\n    offset: '4px',\n};\n\nTDropHolder.displayName = 'TDropHolder';\n\n\nexport default TDropHolder;\n"],"names":["TDropHolder","props","isOpened","setIsOpened","useState","rootRef","useRef","useClickOutside","close","rootClass","useMemo","clazz","itemClass","useCallback","item","rootStyle","style","anchorStyle","itemsStyle","onClickRoot","open","onClickItem","event","handler","getItemTemplate","jsx","jsxs","_a","index"],"mappings":"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"}